"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[392],{5091:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"jt-lib/technical-indicators","title":"Technical Indicators (Indicators)","description":"Indicators is a system of technical indicators for market data analysis. JT-LIB provides built-in indicators and the ability to create custom ones.","source":"@site/docs/jt-lib/technical-indicators.md","sourceDirName":"jt-lib","slug":"/jt-lib/technical-indicators","permalink":"/docs/docs/jt-lib/technical-indicators","draft":false,"unlisted":false,"editUrl":"https://github.com/dev-zone-xs/jt-lab-docs/tree/main/git-docs-en/docs/docs/jt-lib/technical-indicators.md","tags":[],"version":"current","frontMatter":{"id":"technical-indicators","title":"Technical Indicators (Indicators)","sidebar_label":"Technical Indicators"},"sidebar":"tutorialSidebar","previous":{"title":"Market Data","permalink":"/docs/docs/jt-lib/market-data-candles"},"next":{"title":"Reporting System","permalink":"/docs/docs/jt-lib/reporting-system"}}');var t=i(4848),a=i(8453);const r={id:"technical-indicators",title:"Technical Indicators (Indicators)",sidebar_label:"Technical Indicators"},l="Technical Indicators (Indicators)",c={},o=[{value:"Indicator Architecture",id:"indicator-architecture",level:2},{value:"BaseIndicator - Base Class",id:"baseindicator---base-class",level:3},{value:"Main Methods",id:"main-methods",level:3},{value:"Built-in Indicators",id:"built-in-indicators",level:2},{value:"1. RSI (Relative Strength Index)",id:"1-rsi-relative-strength-index",level:3},{value:"2. SMA (Simple Moving Average)",id:"2-sma-simple-moving-average",level:3},{value:"3. ATR (Average True Range)",id:"3-atr-average-true-range",level:3},{value:"Usage in Trading Strategies",id:"usage-in-trading-strategies",level:2},{value:"Example: RSI Strategy",id:"example-rsi-strategy",level:3},{value:"Example: Multi-Timeframe Analysis",id:"example-multi-timeframe-analysis",level:3},{value:"System Integration",id:"system-integration",level:2},{value:"Access through globals",id:"access-through-globals",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"technical-indicators-indicators",children:"Technical Indicators (Indicators)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Indicators"})," is a system of technical indicators for market data analysis. JT-LIB provides built-in indicators and the ability to create custom ones."]}),"\n",(0,t.jsx)(n.h2,{id:"indicator-architecture",children:"Indicator Architecture"}),"\n",(0,t.jsx)(n.h3,{id:"baseindicator---base-class",children:"BaseIndicator - Base Class"}),"\n",(0,t.jsxs)(n.p,{children:["All indicators inherit from ",(0,t.jsx)(n.code,{children:"BaseIndicator"}),", which provides:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CandlesBuffer Integration"})," \u2014 automatic candlestick data retrieval"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Result Buffering"})," \u2014 caching of computed values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Optimization"})," \u2014 recalculation of only new data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lifecycle Management"})," \u2014 automatic resource cleanup"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"main-methods",children:"Main Methods"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class BaseIndicator {\n  // Get last value\n  getValue(shift = 0): number;\n  \n  // Get all values\n  getIndicatorValues(): BufferIndicatorItem[];\n  \n  // Clear buffer\n  clear(): void;\n  \n  // Indicator information\n  getInfo(): IndicatorInfo;\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"built-in-indicators",children:"Built-in Indicators"}),"\n",(0,t.jsx)(n.h3,{id:"1-rsi-relative-strength-index",children:"1. RSI (Relative Strength Index)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"RSI"})," \u2014 relative strength indicator, shows market overbought/oversold conditions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Create RSI indicator\nconst rsi = await globals.indicators.rsi('BTC/USDT', '1h', 14);\n\n// Get current value\nconst currentRsi = rsi.getValue();\n\n// Get value with offset\nconst previousRsi = rsi.getValue(1);\n\n// Get all values\nconst allValues = rsi.getIndicatorValues();\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"symbol"})," \u2014 trading symbol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeframe"})," \u2014 timeframe ('1m', '5m', '1h', '1d', etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"period"})," \u2014 calculation period (default 14)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Interpretation:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RSI > 70"})," \u2014 overbought (sell signal)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RSI < 30"})," \u2014 oversold (buy signal)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-sma-simple-moving-average",children:"2. SMA (Simple Moving Average)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SMA"})," \u2014 simple moving average, smooths price fluctuations."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Create SMA indicator\nconst sma = await globals.indicators.sma('BTC/USDT', '1h', 20);\n\n// Get current value\nconst currentSma = sma.getValue();\n\n// Compare price with SMA\nconst currentPrice = this.basket.close();\nif (currentPrice > currentSma) {\n  log('Strategy', 'Price above SMA - uptrend', { currentPrice, smaValue: currentSma }, true);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"symbol"})," \u2014 trading symbol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeframe"})," \u2014 timeframe"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"period"})," \u2014 calculation period (default 14)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-atr-average-true-range",children:"3. ATR (Average True Range)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ATR"})," \u2014 average true range, shows market volatility."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Create ATR indicator\nconst atr = await globals.indicators.atr('BTC/USDT', '1h', 14);\n\n// Get current volatility\nconst currentAtr = atr.getValue();\n\n// Use ATR for stop-loss calculation\nconst stopLossDistance = currentAtr * 2; // 2 ATR\nconst stopLoss = currentPrice - stopLossDistance;\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"symbol"})," \u2014 trading symbol"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeframe"})," \u2014 timeframe"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"period"})," \u2014 calculation period (default 14)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"usage-in-trading-strategies",children:"Usage in Trading Strategies"}),"\n",(0,t.jsx)(n.h3,{id:"example-rsi-strategy",children:"Example: RSI Strategy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Script extends BaseScript {\n  private rsi: RelativeStrengthIndex;\n  private sma: SimpleMovingAverageIndicator;\n  private isPositionOpened = false;\n\n  async onInit() {\n    // Create indicators\n    this.rsi = await globals.indicators.rsi(this.symbols[0], '1h', 14);\n    this.sma = await globals.indicators.sma(this.symbols[0], '1h', 20);\n  }\n\n  async onTick() {\n    if (this.isPositionOpened) return;\n\n    const currentPrice = this.basket.close();\n    const rsiValue = this.rsi.getValue();\n    const smaValue = this.sma.getValue();\n\n    // Buy signal\n    if (rsiValue < 30 && currentPrice > smaValue) {\n      const amount = this.basket.getContractsAmount(100);\n      await this.basket.buyMarket(amount);\n      this.isPositionOpened = true;\n    }\n\n    // Sell signal\n    if (rsiValue > 70 && currentPrice < smaValue) {\n      const amount = this.basket.getContractsAmount(100);\n      await this.basket.sellMarket(amount);\n      this.isPositionOpened = true;\n    }\n  }\n\n  async onOrderChange(order: Order) {\n    if (order.status === 'closed') {\n      this.isPositionOpened = false;\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-multi-timeframe-analysis",children:"Example: Multi-Timeframe Analysis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Script extends BaseScript {\n  private rsi1h: RelativeStrengthIndex;\n  private rsi4h: RelativeStrengthIndex;\n  private sma1h: SimpleMovingAverageIndicator;\n  private sma4h: SimpleMovingAverageIndicator;\n\n  async onInit() {\n    const symbol = this.symbols[0];\n    \n    // Indicators on different timeframes\n    this.rsi1h = await globals.indicators.rsi(symbol, '1h', 14);\n    this.rsi4h = await globals.indicators.rsi(symbol, '4h', 14);\n    this.sma1h = await globals.indicators.sma(symbol, '1h', 20);\n    this.sma4h = await globals.indicators.sma(symbol, '4h', 20);\n  }\n\n  async onTick() {\n    // Trend analysis on higher timeframe\n    const trend4h = this.getTrend4h();\n    \n    // Entry analysis on lower timeframe\n    const entry1h = this.getEntry1h();\n\n    if (trend4h === 'bullish' && entry1h === 'buy') {\n      // Buy in trend direction\n      const amount = this.basket.getContractsAmount(100);\n      await this.basket.buyMarket(amount);\n    }\n  }\n\n  private getTrend4h(): 'bullish' | 'bearish' | 'neutral' {\n    const price = this.basket.close();\n    const sma4hValue = this.sma4h.getValue();\n    \n    if (price > sma4hValue) return 'bullish';\n    if (price < sma4hValue) return 'bearish';\n    return 'neutral';\n  }\n\n  private getEntry1h(): 'buy' | 'sell' | 'hold' {\n    const rsi1hValue = this.rsi1h.getValue();\n    \n    if (rsi1hValue < 30) return 'buy';\n    if (rsi1hValue > 70) return 'sell';\n    return 'hold';\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"system-integration",children:"System Integration"}),"\n",(0,t.jsx)(n.h3,{id:"access-through-globals",children:"Access through globals"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Automatically available in BaseScript\nclass Script extends BaseScript {\n  async onInit() {\n    // Create indicators\n    const rsi = await globals.indicators.rsi('BTC/USDT', '1h', 14);\n    const sma = await globals.indicators.sma('BTC/USDT', '1h', 20);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Technical indicators in JT-LIB provide powerful tools for market analysis and creating complex trading strategies. Proper use of built-in indicators is critical for successful trading."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);